name: Orchestrator

on:
  push: {}
  pull_request: {}

env:
  PYTHON_VERSION: 3.8
  
jobs:
  print_context:
    runs-on: ubuntu-latest
    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo $EVENT_CONTEXT

  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ""
    steps:
      - name: Find tag from helm chart
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Is push"
          echo HELM_VERSION=$(grep "version: " chart/Chart.yaml | cut -f2 -d' ') >> $GITHUB_ENV
      
      - name: Find tag from helm chart
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Is push"
          echo HELM_VERSION=$(grep "version: " chart/Chart.yaml | cut -f2 -d' ') >> $GITHUB_ENV
        

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run linting
  #       uses: ./.github/workflows/actions/lint
  #       with:
  #         PYTHON_VERSION: ${{ env.PYTHON_VERSION }}

  # unit_test:
  #   name: Unit test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run unit tests
  #       uses: ./.github/workflows/actions/unit-test
  #       with:
  #         PYTHON_VERSION: ${{ env.PYTHON_VERSION }}

  # integration_test:
  #   name: Integration test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run integration tests
  #       uses: ./.github/workflows/actions/integration-test
  #       with:
  #         PYTHON_VERSION: ${{ env.PYTHON_VERSION }}

  # build_and_push_container:
  #   name: Build and push container
  #   runs-on: ubuntu-latest
  #   needs: [lint, unit_test, integration_test]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build and push container
  #       uses: ./.github/workflows/actions/build-and-push-container

  # update_release_chart:
  #   name: Update release chart
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_container
  #   steps:
  #     - name: Update release chart
  #       uses: ./.github/workflows/actions/update-release-chart

  # create_release:
  #   name: Create release
  #   runs-on: ubuntu-latest
  #   needs: update_release_chart
  #   steps:
  #     - name: Create release
  #       uses: ./.github/workflows/actions/create-release
  
  # create_pull_request:
  #   name: Create base environment pull request
  #   runs-on: ubuntu-latest
  #   needs: create_release
  #   steps:
  #     - name: Create pull request
  #       uses: ./.github/workflows/actions/create-pull-request
