name: Orchestrator

on:
  push:
    {}

env:
  PYTHON_VERSION: 3.8
  
jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run linting
  #       uses: ./.github/workflows/actions/lint

  # create_release:
  #   name: Create release
  #   runs-on: ubuntu-latest
  #   needs: update_release_chart
  #   steps:
  #     - name: Create release
  #       uses: ./.github/workflows/actions/create-release
  
  # publish_helm_chart:
  #   name: Publish Helm Chart
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run Publish
  #       uses: ./.github/workflows/actions/update-release-chart
  #       with:
  #         CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Add dependency chart repos
        run: |
          helm repo add helmcharts https://distributed-technologies.github.io/helm-charts/
          helm repo update

      - name: Configure Git
        run: |
          git config user.name "Bot"
          git config user.email "bot@mail.com"  
          
      ## This is required to consider the old Circle-CI Index and to stay compatible with all the old releases.
      # - name: Fetch current Chart Index 
      #   run: |
      #     git checkout origin/gh-pages index.yaml
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.0
        with: 
          config: "./.github/configs/cr.yaml"
          charts_dir: chart/bob
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
 
  # unit_test:
  #   name: Unit test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run unit tests
  #       uses: ./.github/workflows/actions/unit-test
  #       with:
  #         PYTHON_VERSION: ${{ env.PYTHON_VERSION }}

  # integration_test:
  #   name: Integration test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run integration tests
  #       uses: ./.github/workflows/actions/integration-test
  #       with:
  #         PYTHON_VERSION: ${{ env.PYTHON_VERSION }}

  # build_and_push_container:
  #   name: Build and push container
  #   runs-on: ubuntu-latest
  #   needs: [lint, unit_test, integration_test]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build and push container
  #       uses: ./.github/workflows/actions/build-and-push-container

  # update_release_chart:
  #   name: Update release chart
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_container
  #   steps:
  #     - name: Update release chart
  #       uses: ./.github/workflows/actions/update-release-chart

  # create_release:
  #   name: Create release
  #   runs-on: ubuntu-latest
  #   needs: update_release_chart
  #   steps:
  #     - name: Create release
  #       uses: ./.github/workflows/actions/create-release
  
  # create_pull_request:
  #   name: Create base environment pull request
  #   runs-on: ubuntu-latest
  #   needs: create_release
  #   steps:
  #     - name: Create pull request
  #       uses: ./.github/workflows/actions/create-pull-request
